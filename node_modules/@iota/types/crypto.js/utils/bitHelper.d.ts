/**
 * Bit manipulation methods.
 * @internal
 */
export declare class BitHelper {
    /**
     * Combine unsigned bytes to unsigned 32-bit.
     * @param bytes The byte array.
     * @param startIndex The start index to convert.
     * @returns The 32 bit number.
     * @internal
     */
    static u8To32LittleEndian(bytes: Uint8Array, startIndex: number): number;
    /**
     * Write a 32 bit unsigned into a byte array.
     * @param bytes The array to write in to.
     * @param startIndex The index to start writing at.
     * @param value The 32 bit value.
     * @internal
     */
    static u32To8LittleEndian(bytes: Uint8Array, startIndex: number, value: number): void;
    /**
     * Rotate the 32 bit number.
     * @param value The value to rotate,
     * @param bits The number of bits to rotate by.
     * @returns The rotated number.
     * @internal
     */
    static rotate(value: number, bits: number): number;
}
