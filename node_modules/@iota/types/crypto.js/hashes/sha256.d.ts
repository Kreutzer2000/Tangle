/**
 * Class to help with Sha256 scheme.
 * TypeScript conversion from https://github.com/emn178/js-sha256.
 */
export declare class Sha256 {
    /**
     * Sha256 256.
     */
    static readonly SIZE_256: number;
    /**
     * Sha256 224.
     */
    static readonly SIZE_224: number;
    /**
     * Extra constants.
     * @internal
     */
    private static readonly EXTRA;
    /**
     * Shift constants.
     * @internal
     */
    private static readonly SHIFT;
    /**
     * K.
     * @internal
     */
    private static readonly K;
    /**
     * Blocks.
     * @internal
     */
    private readonly _blocks;
    /**
     * Bits.
     * @internal
     */
    private readonly _bits;
    /**
     * H0.
     * @internal
     */
    private _h0;
    /**
     * H1.
     * @internal
     */
    private _h1;
    /**
     * H2.
     * @internal
     */
    private _h2;
    /**
     * H3.
     * @internal
     */
    private _h3;
    /**
     * H4.
     * @internal
     */
    private _h4;
    /**
     * H5.
     * @internal
     */
    private _h5;
    /**
     * H6.
     * @internal
     */
    private _h6;
    /**
     * H7.
     * @internal
     */
    private _h7;
    /**
     * Block.
     * @internal
     */
    private _block;
    /**
     * Start.
     * @internal
     */
    private _start;
    /**
     * Bytes.
     * @internal
     */
    private _bytes;
    /**
     * h Bytes.
     * @internal
     */
    private _hBytes;
    /**
     * Last byte index.
     * @internal
     */
    private _lastByteIndex;
    /**
     * Is it finalized.
     * @internal
     */
    private _finalized;
    /**
     * Is it hashed.
     * @internal
     */
    private _hashed;
    /**
     * Is this the first pass.
     * @internal
     */
    private _first;
    /**
     * Create a new instance of Sha256.
     * @param bits The number of bits.
     */
    constructor(bits?: number);
    /**
     * Perform Sum 256 on the data.
     * @param data The data to operate on.
     * @returns The sum 256 of the data.
     */
    static sum256(data: Uint8Array): Uint8Array;
    /**
     * Perform Sum 224 on the data.
     * @param data The data to operate on.
     * @returns The sum 224 of the data.
     */
    static sum224(data: Uint8Array): Uint8Array;
    /**
     * Update the hash with the data.
     * @param message The data to update the hash with.
     * @returns The instance for chaining.
     */
    update(message: Uint8Array): Sha256;
    /**
     * Get the digest.
     * @returns The digest.
     */
    digest(): Uint8Array;
    /**
     * Finalize the hash.
     * @internal
     */
    private finalize;
    /**
     * Perform the hash.
     * @internal
     */
    private hash;
}
