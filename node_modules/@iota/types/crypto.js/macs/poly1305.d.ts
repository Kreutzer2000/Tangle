/**
 * Implementation of Poly1305.
 */
export declare class Poly1305 {
    /**
     * The buffer for storing the ongoing calculation.
     * @internal
     */
    private _buffer;
    /**
     * The r buffer for storing the ongoing calculation.
     * @internal
     */
    private readonly _r;
    /**
     * The h buffer for storing the ongoing calculation.
     * @internal
     */
    private _h;
    /**
     * The pad buffer for storing the ongoing calculation.
     * @internal
     */
    private readonly _pad;
    /**
     * The leftover count.
     * @internal
     */
    private _leftover;
    /**
     * The final value.
     * @internal
     */
    private _fin;
    /**
     * The mac generated from finish.
     * @internal
     */
    private _finishedMac;
    /**
     * Create a new instance of Poly1305.
     * @param key The key.
     */
    constructor(key: Uint8Array);
    /**
     * Finished the mac.
     */
    finish(): void;
    /**
     * Update the hash.
     * @param input The data to update with.
     * @returns Hasher instance.
     */
    update(input: Uint8Array): Poly1305;
    /**
     * Get the digest for the hash.
     * @returns The mac.
     */
    digest(): Uint8Array;
    /**
     * Perform the block operations.
     * @param m The data,
     * @param mpos The index in the data,
     * @param bytes The number of bytes.
     * @internal
     */
    private blocks;
}
