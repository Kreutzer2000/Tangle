import { BigInteger } from "../../big-int";
/**
 * Helper methods for hex conversions.
 */
export declare class HexHelper {
    /**
     * Const defining the maximum value for a 256 bit int.
     */
    static readonly BIG_INT_MAX_256_BIT: BigInteger;
    /**
     * Convert the big int 256 bit to hex string.
     * @param value The big int value to convert.
     * @returns The hex encoded big int.
     */
    static fromBigInt256(value: BigInteger): string;
    /**
     * Convert the hex string to a big int.
     * @param hex The hex value to convert.
     * @returns The big int.
     */
    static toBigInt256(hex: string): BigInteger;
    /**
     * Strip the 0x prefix if it exists.
     * @param hex The hex value to strip.
     * @returns The stripped hex without the prefix.
     */
    static stripPrefix(hex: string): string;
    /**
     * Add the 0x prefix if it does not exist.
     * @param hex The hex value to add the prefix to.
     * @returns The hex with the prefix.
     */
    static addPrefix(hex: string): string;
    /**
     * Does the hex string have the prefix.
     * @param hex The hex value to check for the prefix.
     * @returns True if the hex string has the prefix.
     */
    static hasPrefix(hex: string): boolean;
}
