import type { ReadStream, WriteStream } from "../../../util.js";
import type { FeatureTypes } from "../../models/features/featureTypes";
import type { ITypeBase } from "../../models/ITypeBase";
/**
 * The minimum length of a featurs tokens list.
 */
export declare const MIN_FEATURES_LENGTH: number;
/**
 * The minimum length of a feature binary representation.
 */
export declare const MIN_FEATURE_LENGTH: number;
/**
 * Deserialize the feature from binary.
 * @param readStream The stream to read the data from.
 * @returns The deserialized object.
 */
export declare function deserializeFeatures(readStream: ReadStream): FeatureTypes[] | undefined;
/**
 * Serialize the feature to binary.
 * @param writeStream The stream to write the data to.
 * @param objects The objects to serialize.
 */
export declare function serializeFeatures(writeStream: WriteStream, objects: FeatureTypes[] | undefined): void;
/**
 * Deserialize the feature from binary.
 * @param readStream The stream to read the data from.
 * @returns The deserialized object.
 */
export declare function deserializeFeature(readStream: ReadStream): FeatureTypes;
/**
 * Serialize the feature to binary.
 * @param writeStream The stream to write the data to.
 * @param object The object to serialize.
 */
export declare function serializeFeature(writeStream: WriteStream, object: ITypeBase<number>): void;
