import '../../typed-array';
export declare const TRYTE_WIDTH: number;
export declare const TRYTE_ALPHABET = "9ABCDEFGHIJKLMNOPQRSTUVWXYZ";
export declare const TRYTES_TRITS_LUT: ReadonlyArray<ReadonlyArray<number>>;
/**
 * Converts trytes or values to trits
 *
 * @method trits
 *
 * @ignore
 *
 * @memberof module:converter
 *
 * @param {String|Number} input - Tryte string or value to be converted.
 *
 * @return {Int8Array} trits
 */
export declare function trits(input: string | number): Int8Array;
/**
 * This method converts [trytes](https://docs.iota.org/docs/getting-started/0.1/introduction/ternary) to trits.
 *
 * ## Related methods
 *
 * To convert ASCII characters to trytes, use the [`asciiToTrytes()`]{@link #module_converter.asciiToTrytes} method.
 *
 * @method trytesToTrits
 *
 * @summary Converts trytes to trits.
 *
 * @memberof module:converter
 *
 * @param {String|number} input - Trytes
 *
 * @example
 * ```js
 * let trits = Converter.trytesToTrits('IOTA');
 * ```
 *
 * @return {Int8Array} trits
 *
 * @throws {errors.INVALID_TRYTES}: Make sure that the `input` argument contains only valid trytes (A-Z or 9).
 */
export declare const trytesToTrits: typeof trits;
/**
 * Converts trits to trytes
 *
 * @method trytes
 *
 * @memberof module:converter
 *
 * @ignore
 *
 * @param {Int8Array} trits
 *
 * @return {String} trytes
 */
export declare function trytes(trits: Int8Array): string;
/**
 * This method converts [trits](https://docs.iota.org/docs/getting-started/0.1/introduction/ternary) to trytes.
 *
 * ## Related methods
 *
 * To convert trytes to ASCII characters, use the [`trytesToAscii()`]{@link #module_converter.trytesToAscii} method.
 *
 * @method tritsToTrytes
 *
 * @summary Converts trits to trytes.
 *
 * @memberof module:converter
 *
 * @param {String|number} input - Trits
 *
 * @example
 * ```js
 * let trytes = Converter.tritsToTrytes(trits);
 * ```
 *
 * @return {Int8Array} trytes
 *
 * @throws {errors.INVALID_TRITS}: Make sure that the `input` argument contains an array of trits.
 */
export declare const tritsToTrytes: typeof trytes;
/**
 * Converts trits into an integer value
 *
 * @method value
 *
 * @ignore
 *
 * @memberof module:converter
 *
 * @param {Int8Array} trits
 *
 * @return {Number}
 */
export declare function value(trits: Int8Array): number;
/**
 * This method converts [trits](https://docs.iota.org/docs/getting-started/0.1/introduction/ternary) to a number.
 *
 * ## Related methods
 *
 * To convert trytes to trits, use the [`trytesToTrits()`]{@link #module_converter.trytesToTrits} method.
 * To convert trits to trytes, use the [`tritsToTrytes()`]{@link #module_converter.tritsToTrytes} method.
 *
 * @method tritsToValue
 *
 * @summary Converts trits to a number.
 *
 * @memberof module:converter
 *
 * @param {String|number} input - Trits
 *
 * @example
 * ```js
 * let number = Converter.tritsToValue(trits);
 * ```
 *
 * @return {Int8Array} number
 */
export declare const tritsToValue: typeof value;
/**
 * Converts an integer value to trits
 *
 * @method fromValue
 *
 * @ignore
 *
 * @memberof module:converter
 *
 * @param {Number} value
 *
 * @return {Int8Array} trits
 */
export declare function fromValue(value: number): Int8Array;
/**
 * This method converts a number to [trits](https://docs.iota.org/docs/getting-started/0.1/introduction/ternary).
 *
 * ## Related methods
 *
 * To convert trits to trytes, use the [`tritsToTrytes()`]{@link #module_converter.tritsToTrytes} method.
 *
 * @method valueToTrits
 *
 * @summary Converts trits to a number.
 *
 * @memberof module:converter
 *
 * @param {String|number} input - Number
 *
 * @example
 * ```js
 * let trits = Converter.valueToTrits(9);
 * ```
 *
 * @return {Int8Array} trits
 */
export declare const valueToTrits: typeof fromValue;
